pipeline {
	agent any
  environment {
    HARBOR_REGISTRY = "harbor.blockgateway.net:8081"
    HARBOR_PROJECT = "library"
    DOCKER_IMAGE = "mainnet-node"
    BUILD_NUMBER = "v2"
	}

  stages {
    stage('Checkout') {
      steps {
        echo 'Checking connection to GitHub...'
        git url: 'https://github.com/DrGhost-Dev/jenkins-test-server.git', branch: 'main'
      }
    }
    stage('Docker Image Build') {
      steps {
        dir('app'){
          script {
            def imageName = "${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${DOCKER_IMAGE}:${BUILD_NUMBER}"
            docker.build(imageName)
          }
        }
      }
    }

    stage('Push to Harbor') {
      steps {
        dir('app'){
          withCredentials([usernamePassword(credentialsId: 'Harbor', usernameVariable: 'HARBOR_USER', passwordVariable: 'HARBOR_PASS')]){
            script {
              def imageName = "${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${DOCKER_IMAGE}:${BUILD_NUMBER}"
              sh "docker login ${HARBOR_REGISTRY} -u ${HARBOR_USER} -p ${HARBOR_PASS}"
              docker.image(imageName).push()
            }
          }
        }
      }
    }
    // -------------- 하드 코딩 버전 ---------------
    // stage('Docker Image Build') {
    //   steps {
    //     sh '''
    //       docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} .
    //       docker build -t ${DOCKER_IMAGE}:latest .
    //     '''
    //   }
    // }

    // stage('Push to Harbor') {
    //   steps {
    //     withCredentials([usernamePassword(credentialsId: 'Harbor', usernameVariable: 'HARBOR_USER', passwordVariable: 'HARBOR_PASS')]){
    //       sh '''
    //         docker tag ${DOCKER_IMAGE}:${BUILD_NUMBER} harbor.blockgateway.net:8081/library/${DOCKER_IMAGE}:${BUILD_NUMBER}
    //         docker login harbor.blockgateway.net:8081 -u ${HARBOR_USER} -p ${HARBOR_PASS}
    //         docker push harbor.blockgateway.net:8081/library/${DOCKER_IMAGE}:${BUILD_NUMBER}
    //       '''
    //     }
    //   }
    // }
    // -------------------------------------------------

    stage('Deploy to EC2') {
      steps {
        dir('ansible'){
          sh '''
          cd /var/jenkins_home/workspace/jenkins-test/ansible
          pwd
          ls -l playbook.yml
          cat ansible-navigator.yml
          ./.venv/bin/ansible-navigator run /var/jenkins_home/workspace/jenkins-test/ansible/playbook.yml -i /var/jenkins_home/workspace/jenkins-test/ansible/inventory.yml --ee false --mode stdout -vvv
          '''
        }
      }
    }
  

//   post {
//     success { echo 'Deployment success' }
//     failure { echo 'Deployment failed' }
  }
}
